const plugin = require('tailwindcss/plugin');

const replitTokensToCSSVars = {
  backgroundRoot: '--background-root',
  backgroundDefault: '--background-default',
  backgroundHigher: '--background-higher',
  backgroundHighest: '--background-highest',
  backgroundOverlay: '--background-overlay',
  foregroundDefault: '--foreground-default',
  foregroundDimmer: '--foreground-dimmer',
  foregroundDimmest: '--foreground-dimmest',
  outlineDimmest: '--outline-dimmest',
  outlineDimmer: '--outline-dimmer',
  outlineDefault: '--outline-default',
  outlineStronger: '--outline-stronger',
  outlineStrongest: '--outline-strongest',
  accentPrimaryDimmest: '--accent-primary-dimmest',
  accentPrimaryDimmer: '--accent-primary-dimmer',
  accentPrimaryDefault: '--accent-primary-default',
  accentPrimaryStronger: '--accent-primary-stronger',
  accentPrimaryStrongest: '--accent-primary-strongest',
  accentPositiveDimmest: '--accent-positive-dimmest',
  accentPositiveDimmer: '--accent-positive-dimmer',
  accentPositiveDefault: '--accent-positive-default',
  accentPositiveStronger: '--accent-positive-stronger',
  accentPositiveStrongest: '--accent-positive-strongest',
  accentNegativeDimmest: '--accent-negative-dimmest',
  accentNegativeDimmer: '--accent-negative-dimmer',
  accentNegativeDefault: '--accent-negative-default',
  accentNegativeStronger: '--accent-negative-stronger',
  accentNegativeStrongest: '--accent-negative-strongest',
  redDimmest: '--red-dimmest',
  redDimmer: '--red-dimmer',
  redDefault: '--red-default',
  redStronger: '--red-stronger',
  redStrongest: '--red-strongest',
  orangeDimmest: '--orange-dimmest',
  orangeDimmer: '--orange-dimmer',
  orangeDefault: '--orange-default',
  orangeStronger: '--orange-stronger',
  orangeStrongest: '--orange-strongest',
  yellowDimmest: '--yellow-dimmest',
  yellowDimmer: '--yellow-dimmer',
  yellowDefault: '--yellow-default',
  yellowStronger: '--yellow-stronger',
  yellowStrongest: '--yellow-strongest',
  limeDimmest: '--lime-dimmest',
  limeDimmer: '--lime-dimmer',
  limeDefault: '--lime-default',
  limeStronger: '--lime-stronger',
  limeStrongest: '--lime-strongest',
  greenDimmest: '--green-dimmest',
  greenDimmer: '--green-dimmer',
  greenDefault: '--green-default',
  greenStronger: '--green-stronger',
  greenStrongest: '--green-strongest',
  tealDimmest: '--teal-dimmest',
  tealDimmer: '--teal-dimmer',
  tealDefault: '--teal-default',
  tealStronger: '--teal-stronger',
  tealStrongest: '--teal-strongest',
  blueDimmest: '--blue-dimmest',
  blueDimmer: '--blue-dimmer',
  blueDefault: '--blue-default',
  blueStronger: '--blue-stronger',
  blueStrongest: '--blue-strongest',
  blurpleDimmest: '--blurple-dimmest',
  blurpleDimmer: '--blurple-dimmer',
  blurpleDefault: '--blurple-default',
  blurpleStronger: '--blurple-stronger',
  blurpleStrongest: '--blurple-strongest',
  purpleDimmest: '--purple-dimmest',
  purpleDimmer: '--purple-dimmer',
  purpleDefault: '--purple-default',
  purpleStronger: '--purple-stronger',
  purpleStrongest: '--purple-strongest',
  magentaDimmest: '--magenta-dimmest',
  magentaDimmer: '--magenta-dimmer',
  magentaDefault: '--magenta-default',
  magentaStronger: '--magenta-stronger',
  magentaStrongest: '--magenta-strongest',
  pinkDimmest: '--pink-dimmest',
  pinkDimmer: '--pink-dimmer',
  pinkDefault: '--pink-default',
  pinkStronger: '--pink-stronger',
  pinkStrongest: '--pink-strongest',
  greyDimmest: '--grey-dimmest',
  greyDimmer: '--grey-dimmer',
  greyDefault: '--grey-default',
  greyStronger: '--grey-stronger',
  greyStrongest: '--grey-strongest',
  brownDimmest: '--brown-dimmest',
  brownDimmer: '--brown-dimmer',
  brownDefault: '--brown-default',
  brownStronger: '--brown-stronger',
  brownStrongest: '--brown-strongest',
  black: '--black',
  white: '--white',
};

// wrap all the replitTokensToCSSVars values in var()
const tokens = Object.keys(replitTokensToCSSVars).reduce((acc, key) => {
  acc[key] = `var(${replitTokensToCSSVars[key]})`;
  return acc;
}, {});

/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./index.html",
    "./src/**/*.{js,ts,jsx,tsx}",
  ],
  theme: {
    extend: {
      colors: tokens,
      backgroundImage: {
        'gradient-radial': 'radial-gradient(var(--tw-gradient-stops))',
      },
      screens: {
        mobileMin: '320px',
        mobileMax: '480px',
        tabletMin: '768px',
        tabletMax: '1024px',
      },
      fontSize: {
        xs: ['12px', '1.5'],
        small: ['14px', '1.6'],
        base: ['16px', '1.725'],
        subheadBig: ['20px', '1.4'],
        header: ['24px', '1.333'],
        headerBig: ['32px', '1.25'],
      },
    },
    spacing: {
      0: '0px',
      1: '1px',
      2: '2px',
      4: '4px',
      6: '6px',
      8: '8px',
      12: '12px',
      16: '16px',
      24: '24px',
      32: '32px',
      40: '40px',
      48: '48px',
      56: '56px',
      64: '64px',
      80: '80px',
      96: '96px',
      128: '128px',
      256: '256px',
    },
    borderRadius: {
      0: '0px',
      1: '1px',
      2: '2px',
      4: '4px',
      6: '6px',
      8: '8px',
      12: '12px',
      16: '16px',
      32: '32px',
      full: '100%',
    },

    fontFamily: {
      sans: '"IBM Plex Sans", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
      mono: 'ReplitHack, Menlo, Monaco, Consolas, Liberation Mono, Courier New',
    },
  },
  plugins: [
    plugin(function ({ addUtilities, theme, variants }) {
      const newUtilities = {};
      const colors = theme('colors');
      Object.entries(colors).forEach(([key, value]) => {
        let color1 = `.${key}` + `{ color: ${value}; }`;
        let color2 = `.bg-${key}` + `{ background-color: ${value}; }`;
        newUtilities[color1] = color1;
        newUtilities[color2] = color2;
      });
      addUtilities(newUtilities, variants('color'));
    }),
    require('@tailwindcss/forms'),
  ],
};
